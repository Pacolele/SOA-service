services:
  python:
    build:
      context: ./person
      dockerfile: Dockerfile
    ports:
      - 8060:8060
    depends_on:
      - redis
      - kafka
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9094
      - KAFKA_TOPIC=api_topic
  redis:
    image: "redis"
    ports:
      - "6379:6379"
  kotlin:
    build:
      context: ./bank
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - 8070:8070
    volumes:
      - h2-data:/data
    environment:
      SPRING_DATASOURCE_URL: jdbc:h2:file:/data/bankdb
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.H2Dialect
  java:
    build:
      context: ./java-project
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - python
      - redis
      - kotlin
    volumes:
      - ./test-logs/rest:/build/account-rest/target/site
      - ./test-logs/logic:/build/account-logic/target/site
      - ./test-logs/datalayer:/build/account-datalayer/target/site

  kafka:
    container_name: kafka
    image: "apache/kafka:latest"
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - ./kafka-data:/var/lib/kafka/data
volumes:
  h2-data:
